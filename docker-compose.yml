version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d  # Montage du script d'init
    networks:
      - app_network

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
      - "8081:8081"
    networks:
      - app_network

  loadbalancer:
    build:
      context: ./loadbalancer
    container_name: load-balancer
    ports:
      - "8080:8080"  # Load Balancer accessible en local
    depends_on:
      - backend-1
      - backend-2
      - backend-3
    networks:
      - app_network

  backend-1:
    image: golang:1.23
    container_name: backend-1
    build: ./backend
    environment:
      - PORT=8082
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - JWT_SECRET=montokenJWT
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
    networks:
      - app_network
  backend-2:
    image: golang:1.23
    container_name: backend-2
    build: ./backend
    environment:
      - PORT=8083
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - JWT_SECRET=montokenJWT
    ports:
      - "8083:8083"
    depends_on:
      - mongodb
    networks:
      - app_network

  backend-3:
    image: golang:1.23
    container_name: backend-3
    build: ./backend
    environment:
      - PORT=8084
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - JWT_SECRET=montokenJWT
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
    networks:
      - app_network
  
  frontend:
    image: node:20.17
    container_name: frontend
    build: ./frontend
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - reverse-proxy
    networks:
      - app_network

  reverse-proxy:
    image: nginx:1.21
    container_name: reverse-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - loadbalancer
    networks:
      - app_network

volumes:
  mongo_data:

networks:
  app_network:
    driver: bridge